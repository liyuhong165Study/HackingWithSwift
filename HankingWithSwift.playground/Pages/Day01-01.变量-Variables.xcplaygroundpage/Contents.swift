//: [Day01-总结](@previous)
// 视频教程 https://www.hackingwithswift.com/sixty/1/1/variables

var str = "Hello, playground"
str = "Goodbye"



/*:
 ## 为什么 Swift 是一种类型安全的语言？
 变量允许我们在程序中存储临时信息，并且几乎是每个 Swift 程序的关键部分。最终，您的程序将以某种方式转换数据：也许您让用户输入待办事项列表任务然后检查它们，也许您让他们在为资本主义浣熊工作的荒岛上漫游，或者也许您读取设备时间并显示它在一个时钟。无论如何，您正在获取某种数据，以某种方式对其进行转换，然后将其显示给用户。

 当然，“以某种方式改变它”才是真正的魔力所在，因为那是您出色的应用程序创意发生的部分。但是在内存中存储数据的过程——保存用户输入的内容，或者你从互联网上下载的内容——是变量的来源。

 使用 创建变量后var，您可以根据需要随时更改它，而无需var再次使用。例如：

 ```
 var favoriteShow = "Orange is the New Black"
 favoriteShow = "The Good Place"
 favoriteShow = "Doctor Who"
 ```
 如果有帮助，请尝试阅读var为“创建新变量”。因此，上面的第一行可能会被大声朗读为“创建一个名为的新变量favoriteShow并为其赋值 Orange 是新的黑色”。第 2 行和第 3 行没有var，因此它们修改现有值而不是创建新变量。

 现在想象一下您var在所有三行中都拥有 - 您var favoriteShow每次都使用。这没有多大意义，因为您会重复说“创建一个名为favoriteShow”的新变量，并且在您第一次尝试后该变量显然不是新的。Swift 会将其标记为错误，这意味着它不会让您运行代码，除非您为变量选择不同的名称。

 这可能看起来很烦人，但相信我：这很有帮助！Swift 想让你清楚：你是在尝试修改一个现有的变量（如果是这样，删除var第二次和后续的时间），或者你是在尝试创建一个新变量（在这种情况下，将其命名为其他名称。）

 最后一件事：尽管变量构成了许多 Swift 程序的核心，但您会发现有时最好避免使用它们。稍后再谈！

 
 
---
 
 
 ## 变量
 
 当您启动 Xcode 时，它​​会询问您想要做什么，我希望您选择“Get Started with a Playground”——这是一个沙箱，您可以在其中键入 Swift 代码并立即查看结果。

 默认为 iOS 的空白游乐场，这很好，因此单击下一步然后创建将其保存在桌面上。

 在本视频中，我想向您介绍变量，它们是您可以存储程序数据的地方。它们被称为变量，因为它们可以变化——您可以自由更改它们的值。

 Playgrounds 从一行代码开始，为我们创建一个变量：

 ```
 var str = "Hello, playground"
 ```
 这将创建一个名为 的新变量str，并赋予其值“Hello, playground”。在 Playground 的右侧，您可以在输出区域看到“Hello, playground”——这是 Xcode 向我们显示已设置的值。

 因为str是一个变量，我们可以改变它：

 str = "Goodbye"
 我们不需要var第二次，因为变量已经创建了——我们只是在改变它。
 
 */
//: [Day01-02.字符串和整数-Strings and integers](@next)
//: [Day02-总结](@next)
