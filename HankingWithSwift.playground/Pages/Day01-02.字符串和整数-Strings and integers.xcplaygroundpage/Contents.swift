//: [Day01-01.变量-Variables](@previous)
// 视频教程 https://www.hackingwithswift.com/sixty/1/2/strings-and-integers

var age = 38
var population = 8_000_000



/*:
 ## 为什么 Swift 是一种类型安全的语言？
 Swift 允许我们将变量创建为字符串和整数，也可以创建许多其他类型的数据。当您创建一个变量时，Swift 可以根据您分配给它的数据类型来确定该变量的类型，然后该变量将始终具有该特定类型。

 例如，这将创建一个名为meaningOfLife等于 42的新变量：
```
 var meaningOfLife = 42
 ```
 因为我们分配了 42 作为 的初始值meaningOfLife，Swift 将分配给它类型integer——一个整数。它是一个变量，这意味着我们可以根据需要经常更改它的值，但我们不能更改它的类型：它始终是一个整数。

 这在构建应用程序时非常有用，因为这意味着 Swift 将确保我们不会对我们的数据犯错误。例如，我们不能这样写：

 ```
 meaningOfLife = "Forty two"
 ```
 这试图将一个字符串分配给一个整数变量，这是不允许的。尽管我们很少犯这样明显的错误，但您会发现这种类型安全性对您使用 Swift 编写代码的每一天都有帮助。

 想一想：我们刚刚创建了一个变量，然后试图改变它的类型，这显然会失败。但是随着您程序的规模和复杂性的增长，您不可能始终将变量的类型保留在您的脑海中，因此我们正在有效地将这项工作转移到 Swift 上。


 
 
---
 
 
 ## 字符串和整数
 
 Swift 是一种所谓的类型安全语言，这意味着每个变量都必须是一种特定类型。strXcode 为我们创建的变量包含一串拼写“Hello, playground”的字母，因此 Swift 为其分配了 type String。

 另一方面，如果我们想存储某人的年龄，我们可能会创建一个这样的变量：
```
 var age = 38
 ```
 它包含一个整数，因此 Swift 分配类型Int——“整数”的缩写。

 如果你有大数字，Swift 允许你使用下划线作为千位分隔符——它们不会改变数字，但它们确实让你更容易阅读。例如：

 ```
 var population = 8_000_000
 ```
 字符串和整数是不同的类型，不能混用。因此，虽然更改str为“Goodbye”是安全的，但我无法将其设为 38，因为那Int不是String.
 
 */
//: [Day01-03.多行字符串-Multi-line strings](@next)
