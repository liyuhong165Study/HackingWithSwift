//: [Day01-05.字符串插值-String interpolation](@previous)
// 视频教程 https://www.hackingwithswift.com/sixty/1/6/constants

let taylor = "swift"


/*:
 ## 为什么 Swift 有常量和变量？
 变量是在程序中存储临时数据的好方法，但 Swift 为我们提供了第二个更好的选择：常量。它们在各方面都与变量相同，但有一个重要区别：一旦它们被设置，我们就无法更改它们的值。

 Swift 真的很喜欢常量，事实上，如果你创建了一个变量然后从不改变它的值，实际上会建议你使用常量。这样做的原因是为了避免出现问题：您创建的任何变量都可以随时随心所欲地更改，因此您失去了一些控制权——您藏匿的重要用户数据可能会在任何时候被删除或替换指向未来。

 常量一旦设置就不允许我们更改值，所以这有点像与 Swift 签订的合同：你是在说“这个值很重要，无论我做什么都不要让我改变它。” 当然，你可以尝试用一个变量来建立同样的契约，但是你键盘上的一个滑动可能会把事情搞砸，而 Swift 将无法提供帮助。通过使用常量——只需更改var为let——你就要求 Swift 确保值永远不会改变，这是你不再需要担心的另一件事。
---
 
 
 ## 常数
 
 我已经说过变量有这个名字是因为它们的值会随着时间的推移而改变，这通常很有用。然而，很多时候你想设置一个值一次就永远不会改变它，所以我们有一个var名为的关键字的替代方法let。

 该let关键字创建常数，这是可以设置一次，永远不会再值。例如：
```
 let taylor = "swift"
 ```
 如果您尝试更改它，Xcode 将拒绝运行您的代码。这是一种安全形式：当您使用常量时，您不能再意外地更改某些内容。

 当您编写自己的 Swift 代码时，let除非您特别想更改某个值，否则您应该始终使用它。事实上，Xcode 会警告你，如果你使用var然后不要改变变量。
 */
//: [Day01-07.类型注释-Type annotations](@next)
