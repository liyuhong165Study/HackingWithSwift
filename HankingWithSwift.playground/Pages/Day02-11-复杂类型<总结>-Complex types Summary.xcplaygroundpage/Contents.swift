//: [Day02-10-枚举原始值-Enum associated values](@previous)
// 视频教程 https://www.hackingwithswift.com/sixty/2/11/complex-types-summary
// 测试 https://www.hackingwithswift.com/review/complex-types-summary



/*:
 
 
 ## 复杂类型


 
 您已经完成了本系列第二部分的结尾，让我们总结一下：

 数组、集合、元组和字典让您可以在单个值下存储一组项目。他们各自以不同的方式执行此操作，因此您使用哪种方式取决于您想要的行为。
 数组按照您添加的顺序存储项目，您可以使用数字位置访问它们。
 Sets 存储项目没有任何顺序，因此您无法使用数字位置访问它们。
 元组的大小是固定的，您可以为它们的每个项目附加名称。您可以使用数字位置或姓名阅读项目。
 字典根据键存储项目，您可以使用这些键读取项目。
 枚举是一种对相关值进行分组的方法，因此您可以使用它们而不会出现拼写错误。
 您可以将原始值附加到枚举，以便可以从整数或字符串创建它们，或者您可以添加关联的值来存储有关每种情况的附加信息。

 */

//: [Day03-总结](@next)
